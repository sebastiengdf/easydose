<?php

namespace AppBundle\Repository;

/**
 * EsrRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EsrRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function haveWaitingEsr($user){
        $qb = $this->createQueryBuilder('e');
        $qb->innerJoin('e.user', 'u')
        ->innerJoin('e.etat', 's')
        ->where('s.libelle = :etatenattent')
        ->andWhere('u = :utilisateur')
        ->setParameter('etatenattent','Encours')
        ->setParameter('utilisateur',$user);
        return count($qb->getQuery()->getResult())>0;
        
    }

    
    public function examensHaveSer($examenid){
        $qb = $this->createQueryBuilder('e');
        $qb->innerJoin('e.examen', 'ex');
        $qb->where('ex.id = :examenid');
        $qb->setParameter('examenid',$examenid);
        
        return count($qb->getQuery()->getResult())>0;
    }
    
   public function getWaitingEsr($user){
        $qb = $this->createQueryBuilder('e');
        $qb->innerJoin('e.user', 'u')
        ->innerJoin('e.etat', 's')
        ->where('s.libelle = :etatenattent')
        ->andWhere('u = :utilisateur')
        ->setParameter('etatenattent','Encours')
        ->setParameter('utilisateur',$user);
        
        return $qb->getQuery()->getResult();
        
    }
    
    public function getEsr($offset,$nbelement,$user,$etat,$seuil){
        $qb = $this->createQueryBuilder('e');
        $qb->leftJoin('e.user', 'u');        
        $qb->leftJoin('e.examen', 'x'); 
        $qb->leftJoin('x.region', 'r');
        $qb->leftJoin('r.regiondose', 'rd');
        $qb->leftJoin('rd.dose', 'd');
        $qb->Where('u = :utilisateur');
        $qb->orWhere('e.etat = :etat');
        $qb->orWhere('d.xrayTubeCurren2 > :seuil');
        $qb->setParameter('utilisateur',$user);
        $qb->setParameter('etat',$etat);
        $qb->setParameter('seuil',$seuil);
        $qb->orderBy('e.id', 'DESC');
        $qb->setMaxResults($nbelement);
        $qb->setFirstResult($offset);
        return $qb->getQuery()->getResult();
        
    }
}
    
    
